---
# traffic draining
# 1. Collect current running configs
# 2. Save the running configs on the Ansible Controller /tmp
# 3. library/getList.py script is run.. Creates an interfaces.txt and protocols.txt files
# 4. Ansible tasks run against the data in the 2 files above.

# Collect all the present interfaces
- name: Collect current interfaces
  junipernetworks.junos.junos_command: 
    commands: show interfaces terse
  register: show_interfaces_terse
  when: isolation

# Debug the output
- name: Debug show interfaces terse
  ansible.builtin.debug:
    var: show_interfaces_terse


# Collect the interfaces participating in ospf
- name: Collect ospf interfaces
  junipernetworks.junos.junos_command: 
    commands: show ospf interfaces
  register: show_ospf_interfaces
  when: isolation

# Debug the output
- name: Debug show ospf interfaces
  ansible.builtin.debug:
    var: show_ospf_interfaces             






# # Read the health-checks commands files and create a list of commands to run
# - name: Generate Lists from interfaces.txt and protocols.txt files
#   ansible.builtin.set_fact:
#     interfaces_list: "{{ lookup('file', '{{ interfaces_file }}').splitlines() }}"
#     # protocols_list: "{{ lookup('file', '{{ protocols_file }}').splitlines() }}"
#   delegate_to: localhost

# - name: Display lists
#   ansible.builtin.debug:
#     msg: 
#       - "Interfaces List ; {{ interfaces_list }}"
#       #- "Protocols ; {{ protocol_list }}"
#   delegate_to: localhost
#   ignore_errors: true

# - name: Display commands to run
#   ansible.builtin.debug:
#     msg: 
#       - "disable {{ item }}"
#   loop: "{{ interfaces_list }}"
#   delegate_to: localhost
#   ignore_errors: true

# Commands happen from here
# - name: Shut down the listed interfaces
#   junipernetworks.junos.junos_command:       # is this the module to configure/change anything?
#     commands: disable {{ item }}             # Interfaces to be shut down
#   loop: "{{ interfaces_list }}"
#   when: 
#     - interfaces | length > 0
#     - isolation

# - name: Admin up the listed interfaces
#   junipernetworks.junos.junos_command:
#     commands: enable/delete {{ item }}             # Interfaces to be unshut
#   loop: "{{ interfaces_list }}"
#   when: 
#     - interfaces | length > 0
#     - normalization